{"version":3,"sources":["components/Navbar.js","components/actions/action-types/constActions.js","components/MainPage.js","components/actions/cartActions.js","components/Cart.js","App.js","reportWebVitals.js","components/reducers/cartReducer.js","index.js"],"names":["Navbar","className","width","height","xmlns","fillRule","clipRule","d","to","ADD_TO_CART","SUBTRACT_FROM_CART","MainPage","handleAdd","id","name","price","props","addToCart","handleSubtract","subtractFromCart","handleSearchSubmit","e","preventDefault","searchedItemList","results","query","state","searchValue","i","forSaleItems","length","toString","toLowerCase","includes","push","map","item","parseFloat","toFixed","type","onClick","setState","searchedItems","showAllItems","resetDropdown","document","getElementsByTagName","value","resetSearch","handleSearchValueChange","evt","event","target","handleDropdownValueChange","error","matchFound","axios","get","then","response","data","catch","console","log","saleItemList","this","searchedItemShowList","total","onSubmit","onChange","placeholder","aria-label","required","Component","connect","dispatch","Cart","cartItems","items","quantity","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","createCartItem","cartReducer","action","cartItem","existedItem","find","newTotal","addedItem","newItems","filter","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.06a76ac1.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"flex items-center justify-between flex-wrap bg-gradient-to-r from-purple-500 via-purple-600 to-blue-500 p-6\">\n            <div className=\"flex items-center flex-no-shrink text-white mr-6\">\n                <svg className=\"mr-2\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\"><path d=\"M13.5 18c-.828 0-1.5.672-1.5 1.5 0 .829.672 1.5 1.5 1.5s1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm-3.5 1.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5zm13.257-14.5h-1.929l-3.473 12h-13.239l-4.616-11h2.169l3.776 9h10.428l3.432-12h4.195l-.743 2zm-13.537 4.183l-2.325-2.183-1.395 1.435 3.746 3.565 6.559-6.592-1.422-1.408-5.163 5.183z\"/></svg>\n                <span className=\"font-semibold text-xl tracking-tight italic\">Shopping Cart</span>\n            </div>\n            <div className=\"w-full block flex-end lg:flex lg:items-center lg:w-auto\">\n                <div className=\"text-md lg:flex-grow\">\n                    <Link to=\"/\" className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-gray-200 mr-4\">\n                        Shop\n                    </Link>\n                    <Link to=\"cart\" className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-gray-200 mr-4\">\n                        My Cart\n                    </Link>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default Navbar;","//Created to avoid typos and duplication since it's a string and could be misspelled.\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const SUBTRACT_FROM_CART = 'SUBTRACT_FROM_CART';\nexport const ADD_ITEMS_TO_STATE = 'ADD_ITEMS_TO_STATE';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addToCart } from './actions/cartActions'\nimport { subtractFromCart } from './actions/cartActions'\nimport axios from 'axios';\n\n\nclass MainPage extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n          forSaleItems: [],\n          error: '',\n          searchValue: '',\n          searchedItems: '',\n          showAllItems: true,\n          matchFound: false\n        };\n      }\n\n\n    //Function to handle adding items to the cart when the + button is clicked  \n    handleAdd = (id, name, price) => {\n        // console.log(id);\n        this.props.addToCart(id, name, price); \n    }\n\n    //Function to handle subtracting items from the cart when the - is clicked\n    handleSubtract = (id) => {\n        // console.log(id);\n        this.props.subtractFromCart(id); \n    }\n\n    //function to handle when the search bar is submitted, \n    //this function prevents the page from reloading then will \n    //hide items if their name doesnt exactly match the search string.\n    handleSearchSubmit = (e) => {\n        e.preventDefault();\n        let results = [];\n        let query = this.state.searchValue;\n        let searchedItemList;\n        for (let i=0 ; i < this.state.forSaleItems.length ; i++) {\n            if (this.state.forSaleItems[i].name.toString().toLowerCase().includes(query.toString().toLowerCase())) {\n                results.push(this.state.forSaleItems[i]);\n            }\n        }\n        if (results.length > 0) {\n            searchedItemList = results.map( item => {\n                return (\n                    <li className={`bg-white border-2 border-blue-500 rounded-xl px-8 py-6 mb-2 cursor-pointer shadow hover:shadow-xl transition duration-300 ease-in-out`} key={item.id}>\n                        <div className=\"text-center\">\n                            <h3 className=\"mb-3 text-xl font-semibold text-purple-600\">{item.name}</h3>\n                            <p>Unit Price: ${parseFloat(item.price).toFixed(2)}</p> \n                            <p>\n                                Category: {item.type} \n                            </p>\n                            <div className=\"flex justify-center\">\n                            <button className=\"bg-purple-700 hover:bg-purple-900 shadow hover:shadow-xl text-white font-bold py-2 px-4 my-2 mx-3 rounded border-2 border-blue-500\" onClick={()=>{this.handleAdd(item.id, item.name, item.price)}}>+</button>\n                            <button className=\"bg-purple-600 hover:bg-purple-900 shadow hover:shadow-xl text-white font-bold py-2 px-4 my-2 mx-3 rounded border-2 border-blue-400\" onClick={()=>{this.handleSubtract(item.id)}}>-</button>\n                            </div>\n                        </div>        \n                    </li>\n                )\n            })\n        }\n        // console.log(\"search fired, results: \" + this.state.searchedItems);\n        this.setState({\n            searchedItems: searchedItemList,\n            showAllItems: false\n        })\n\n    }\n\n    //function that resets the dropdown when searchvalues are entered to prevent confusing UI\n    resetDropdown = () => {    \n        let dropdownElement = document.getElementsByTagName(\"select\")[0];\n        // console.log(\"resetdrropdown fired: \" + dropdownElement.value);\n        dropdownElement.value = \"Select Category\";\n    }\n\n    //function that resets the search input field when the dropdown is changed prevent confusing UI\n    resetSearch = () => {\n        let searchElement = document.getElementsByTagName(\"input\")[0];\n        // console.log(searchElement);\n        searchElement.value = \"\";\n    }\n\n    //function that adjusts the search value, updates the state to show all items, and triggers resetDropdown\n    handleSearchValueChange = (evt) => {\n        const event = evt.target;\n        // console.log(\"handle search change fired\");\n        this.resetDropdown();\n        this.setState({\n            searchValue: event.value,\n            showAllItems: true\n        })\n    }\n\n    //function that adjusts the search value, updates the state to show items in that category or\n    //show all items, and triggers resetSearch\n    handleDropdownValueChange = (evt) => {\n        const event = evt.target;\n        this.resetSearch();\n        // console.log(event.value);\n        if (event.value === \"Select Category\") {\n            this.setState ({\n                showAllItems: true\n            })\n        } else {\n            let results = [];\n            let query = event.value;\n            let searchedItemList;\n            for (let i=0 ; i < this.state.forSaleItems.length ; i++) {\n                if (this.state.forSaleItems[i].type.toString().toLowerCase() === query.toString().toLowerCase()) {\n                    results.push(this.state.forSaleItems[i]);\n                }\n            }\n            if (results.length > 0) {\n                searchedItemList = results.map( item => {\n                    return (\n                        <li className={`bg-white border-2 border-blue-500 rounded-xl px-8 py-6 mb-2 cursor-pointer shadow hover:shadow-xl transition duration-300 ease-in-out`} key={item.id}>\n                            <div className=\"text-center\">\n                                <h3 className=\"mb-3 text-xl font-semibold text-purple-600\">{item.name}</h3>\n                                <p>Unit Price: ${parseFloat(item.price).toFixed(2)}</p> \n                                <p>\n                                    Category: {item.type} \n                                </p>\n                                <div className=\"flex justify-center\">\n                                <button className=\"bg-purple-700 hover:bg-purple-900 shadow hover:shadow-xl text-white font-bold py-2 px-4 my-2 mx-3 rounded border-2 border-blue-500\" onClick={()=>{this.handleAdd(item.id, item.name, item.price)}}>+</button>\n                            <button className=\"bg-purple-600 hover:bg-purple-900 shadow hover:shadow-xl text-white font-bold py-2 px-4 my-2 mx-3 rounded border-2 border-blue-400\" onClick={()=>{this.handleSubtract(item.id)}}>-</button>\n                                </div>\n                            </div>        \n                        </li>\n                    )\n                })\n            }\n            this.setState({\n                searchedItems: searchedItemList,\n                showAllItems: false\n            })\n        }\n    }\n\n    //fires on page load to ensure items are up to date.\n    componentDidMount() {\n        // Simple GET request using axios, then setting the state\n        //Since mocki is having issues here is the myJSONserver link: https://my-json-server.typicode.com/steelmasterj/myjsonserver/data\n        //Since mocki is having issues here is the original mocki link: https://api.mocki.io/v1/b8bead03\n        axios.get('https://my-json-server.typicode.com/steelmasterj/myjsonserver/data')\n            .then(response => {\n                // console.log(response);\n                this.setState({\n                    forSaleItems: response.data,\n                    error: ''\n                })\n            })\n            .catch(error => {\n                console.log('Error fetching and parsing data', error);\n                this.setState({\n                    error: \"error fetching data\"\n                })\n            });\n    }\n\n    render() {\n        // console.log(this.props.saleItems);\n\n        //variable used to create table rows for each item returned from the API\n        let saleItemList = this.state.forSaleItems.map( item => {\n            return (\n                <li className={`bg-white border-2 border-blue-500 rounded-xl px-8 py-6 mb-2 cursor-pointer shadow hover:shadow-xl transition duration-300 ease-in-out`} key={item.id}>\n                    <div className=\"text-center\">\n                        <h3 className=\"mb-3 text-xl font-semibold text-purple-600\">{item.name}</h3>\n                        <p>Unit Price: ${parseFloat(item.price).toFixed(2)}</p> \n                        <p>\n                            Category: {item.type} \n                        </p>\n                        <div className=\"flex justify-center\">\n                            <button className=\"bg-purple-700 hover:bg-purple-900 shadow hover:shadow-xl text-white font-bold py-2 px-4 my-2 mx-3 rounded border-2 border-blue-500\" onClick={()=>{this.handleAdd(item.id, item.name, item.price)}}>+</button>\n                            <button className=\"bg-purple-600 hover:bg-purple-900 shadow hover:shadow-xl text-white font-bold py-2 px-4 my-2 mx-3 rounded border-2 border-blue-400\" onClick={()=>{this.handleSubtract(item.id)}}>-</button>\n                        </div>\n                    </div>        \n                </li>\n            )\n        })\n\n        //variable that is used to hold values of items that fit search or dropdown filters\n        let searchedItemShowList = this.state.searchedItems;\n\n        return (\n            <div className=\"pt-8 flex flex-col bg-gradient-to-b from-blue-300 via-purple-200 to-white h-screen\">\n                <h1 className=\"mx-auto text-4xl text-purple-600 font-semibold mb-8 italic tracking-tight\">Items Available Today</h1>\n                {(this.props.total > 0) ? <p className={`mx-auto text-purple-600 text-2xl`}>Current Grand Total: ${parseFloat(this.props.total).toFixed(2)}</p> : <div></div>}\n                {((this.state.showAllItems === false) && (!this.state.searchedItems)) ? <p className={`mx-auto text-red-500`}>No Results :( Try Searching Again</p> : <div></div>}\n                <div className=\"flex sm:flex-row flex-col gap-6\">\n                    <div className=\"mx-auto sm:ml-auto\">\n                        <form \n                            onSubmit={this.handleSearchSubmit}\n                        >\n                            <input \n                            className=\"h-8 w-64 mx-auto block my-4 px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white bg-white rounded text-sm border-0 shadow outline-none focus:outline-none focus:ring\"\n                            type=\"search\" \n                            name=\"search\"\n                            onChange={this.handleSearchValueChange}\n                            placeholder=\"Search\"\n                            aria-label=\"Search\"\n                            required\n                            />\n                        </form>\n                    </div>\n                    <div className=\"mx-auto sm:mr-auto\">\n                        <form>\n                            <div className=\"text-center\">\n                                <select\n                                    className=\"h-8 w-64 mx-auto my-4 rounded border-gray-300 shadow-sm focus:border-green-300 focus:ring focus:ring-green-200 focus:ring-opacity-50 shadow\"\n                                    name=\"meet-time\" \n                                    id=\"meet-time\"\n                                    onChange={this.handleDropdownValueChange}\n                                >\n                                    <option value=\"Select Category\">Select Category</option>\n                                    <option value=\"Bakery\">Bakery</option>\n                                    <option value=\"Dairy\">Dairy</option>\n                                    <option value=\"Fruit\">Fruit</option>\n                                    <option value=\"Meat\">Meat</option>\n                                    <option value=\"Vegan\">Vegan</option>\n                                    <option value=\"Vegetable\">Vegetable</option>\n                                </select>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                {(this.state.error) ? <p className={`mx-auto text-red-500`}>Error Fetching data! :(</p> : <div></div>}\n                {(this.state.forSaleItems.length > 0) ?                 \n                    <ul className={`grid grid-cols-1 md:grid-cols-3 gap-8 pt-6 mx-8`}>\n                        {(this.state.showAllItems) ? saleItemList : searchedItemShowList}\n                    </ul> :\n                    <p className=\"mx-auto\">Loading items...</p>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        total: state.total\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addToCart: (id, name, price) => {dispatch(addToCart(id, name, price))},\n        subtractFromCart: (id) => {dispatch(subtractFromCart(id))},\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)","import { ADD_TO_CART, SUBTRACT_FROM_CART, ADD_ITEMS_TO_STATE } from './action-types/constActions'\n\n//Add to Cart Action\n\nexport const addToCart = (id, name, price) => {\n    return {\n        type: ADD_TO_CART,\n        id,\n        name,\n        price\n    }\n}\n\n//Subtract from Cart Action\n\nexport const subtractFromCart = (id) => {\n    return {\n        type: SUBTRACT_FROM_CART,\n         id }\n}\n\nexport const addItemsToState = (items) => {\n    return {\n        type: ADD_ITEMS_TO_STATE,\n        items\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nclass Cart extends Component{\n\n    render() {\n              \n        let cartItems = this.props.items.length ?\n            (  \n                this.props.items.map(item => {\n                    return(\n                            <li className={`bg-gray-100 rounded-xl px-8 py-6 cursor-pointer shadow hover:shadow-xl transition duration-300 ease-in-out`} key={item.id}>\n                                <div className=\"text-center\">\n                                    <h3 className=\"mb-3 text-xl font-semibold text-purple-600\">{item.name}</h3>\n                                    <p>Unit Price: ${parseFloat(item.price).toFixed(2)}</p> \n                                    <p>\n                                        Quantity: {item.quantity} \n                                    </p>\n                                    <p>Total Item Price: ${parseFloat(item.price * item.quantity).toFixed(2)}</p>\n                                </div>        \n                            </li>\n                    )\n                })\n            ):\n\n             (\n                <div className=\"mx-auto\">\n                    <p className=\"text-1xl text-red-600 font-extrabold mb-8 text-center\">Nothing In Cart</p>\n                    <Link to=\"/\"><button className=\"bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 m-1 rounded\">Continue Shopping</button></Link>\n                </div>\n             )\n       return(\n            <div className=\"pt-8 flex flex-col bg-blue-200 h-screen\">\n                <h1 className=\"mx-auto text-4xl text-purple-600 font-extrabold mb-8\">Your Cart</h1>\n                <ul className={(this.props.total === 0) ? `grid grid-cols-1 gap-8 pt-16 mx-8` : `grid grid-cols-3 gap-8 pt-16 mx-8`}>\n                    {cartItems}\n                </ul>\n                <div>\n                    <h2 className={`text-4xl font-bold text-gray-800 mt-8 text-center`}>{ (this.props.total === 0) ? \"\" : `Grand Total: $${parseFloat(this.props.total).toFixed(2)}` }</h2>   \n                </div>  \n            </div>\n       )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.cartItems,\n        total: state.total\n    }\n}\n\nexport default connect(mapStateToProps)(Cart)","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport MainPage from './components/MainPage'\nimport Cart from './components/Cart'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Navbar/>\n            <Switch>\n              <Route exact path=\"/\" component={MainPage}/>\n              <Route path=\"/cart\" component={Cart}/>\n            </Switch>\n          </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TO_CART, SUBTRACT_FROM_CART } from '../actions/action-types/constActions';\n\n\nconst initState = {\n    cartItems:[],\n    total: 0\n\n}\n\n//function to create new cartItems and push them into the state array\nconst createCartItem = function(id, name, price) {\n    return ({\n        id: id,\n        name: name,\n        price: price,\n        quantity: 0,\n    })\n}\n\n//main reducer function\nconst cartReducer = (state = initState, action) => {\n    //MainPage Action Logic\n\n    //if + button is clicked\n    if(action.type === ADD_TO_CART) {\n        //match a for sale item id with the clicked item id\n        let cartItem = createCartItem(action.id, action.name, action.price)\n\n        //check if the clicked item id exists in the cartItems\n        console.log(action.id);\n        let existedItem = state.cartItems.find(item => action.id === item.id)\n\n        //if there is an item already in the cart with the clicked item id, just add 1 to that item's quantity, else add new clicked item to cart.\n        if(existedItem) {\n            console.log(\"existed item id = \" + existedItem.id);\n            existedItem.quantity += 1\n            return {\n                ...state,\n                total: state.total + cartItem.price \n                }\n        } else {\n            cartItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + cartItem.price \n            return {\n                ...state,\n                cartItems: [...state.cartItems, cartItem],\n                total : newTotal\n            }\n            \n        }\n    }\n\n    //if - button is clicked\n    if(action.type === SUBTRACT_FROM_CART) {  \n        //match a sale item id with the clicked item id\n        let addedItem = state.cartItems.find(item => item.id === action.id) \n\n        //if there is no added item match(meaning quantity is 0) then do nothing\n        //else if there is 1 then remove that item from the cart\n        //else finally if the quantity of the clicked item is more than 1 just remove 1 from it's quantity\n        if (!(addedItem)) {\n            return state\n        } else if (addedItem.quantity === 1) {\n            let newItems = state.cartItems.filter(item => item.id !== action.id)\n            let newTotal = state.total - addedItem.price\n            return {\n                ...state,\n                cartItems: newItems,\n                total: newTotal\n            }\n        } else {\n            addedItem.quantity -= 1\n            let newTotal = state.total - addedItem.price\n            return {\n                ...state,\n                total: newTotal\n            }\n        }\n        \n    }\n    //if anything else happens, do nothing\n    else {\n        return state\n    }\n\n}\n\nexport default cartReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport cartReducer from './components/reducers/cartReducer';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}